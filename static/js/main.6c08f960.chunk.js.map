{"version":3,"sources":["store.js","NavBar/NavBar.js","ArtWorkPreview/ArtWorkPreview.js","FavoritesPage/FavoritesPage.js","DailyCurationTitle/DailyCurationTitle.js","apiCalls.js","DailyCuration/DailyCuration.js","ExpandedView/ExpandedView.js","Filter/Filter.js","NothingSelectedAlert/NothingSelectedAlert.js","OtherWorkByArtist/OtherWorkByArtist.js","App/App.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","initialState","dailyCurationTopics","dailyCurationTopic","currentArtwork","favorites","cultureOrArtistQuery","mediumQuery","filterByDisplay","reducer","state","action","type","Math","floor","random","length","artDetails","filter","fave","objectID","Error","StoreProvider","children","useReducer","dispatch","Provider","value","useStore","useContext","NavBar","to","className","exact","activeClassName","onClick","ArtWorkPreview","artwork","title","data-testid","src","primaryImageSmall","alt","FavoritesPage","map","key","DailyCurationTitle","useEffect","fetchLink","getDailyCollectionIds","theme","a","fetch","response","json","data","console","log","getDailyCollection","ids","Promise","all","id","collectionsRes","featuredCollection","getOtherArtByArtist","artist","fetchByArtistOrCulture","query","fetchByArtistOrCultureAndOnDisplay","fetchByMedium","medium","subCats","DailyCuration","dataObjects","page","useState","collection","updateCollection","isLoading","setIsLoading","fetchData","topic","objectIDs","splice","search","artworkIds","total","fetchByMediumQuery","color","height","width","ExpandedView","some","artistDisplayName","artistDisplayBio","objectDate","dimensions","href","objectURL","target","Filter","searchTerms","updateSearch","handleClick","onChange","e","name","charAt","toUpperCase","slice","placeholder","role","aria-pressed","tabIndex","onKeyDown","htmlFor","checked","NothingSelectedAlert","OtherWorkByArtist","artistLastName","split","artSelection","updateArtSelection","index","indexOf","art","findCurrentArtwork","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6c08f960.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nconst StoreContext = createContext();\nconst initialState = {\n  dailyCurationTopics: [\"sea\", \"sunflower\", \"mountain\", \"sunset\"],\n  dailyCurationTopic: \"\",\n  currentArtwork: {},\n  favorites: [],\n  cultureOrArtistQuery: \"\",\n  mediumQuery: \"\",\n  filterByDisplay: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"findRandomTopic\":\n      return {\n        ...state,\n        dailyCurationTopic: state.dailyCurationTopics[\n            Math.floor(Math.random() * state.dailyCurationTopics.length)]};\n    \n    case \"resetRandomTopic\":\n      return {\n        ...state,\n        dailyCurationTopic: \"\"\n      };\n    \n    case \"updateCurrentArtwork\":\n      return {\n        ...state,\n        currentArtwork: { ...action.artDetails }\n      };\n    \n    case \"addToFavorites\":\n      return {\n        ...state,\n        favorites: [...state.favorites, { ...action.artDetails }],\n      };\n    \n    case \"deleteFromFavorites\":\n      return {\n        ...state,\n        favorites: state.favorites.filter(\n          (fave) => fave.objectID !== action.artDetails.objectID\n        ),\n      };\n\n    case \"updateCultureOrArtistQuery\":\n      return {\n        ...state,\n        cultureOrArtistQuery: action.cultureOrArtistQuery,\n      };\n    \n    case \"updateMediumQuery\":\n      return {\n        ...state,\n        mediumQuery: action.mediumQuery,\n      };\n\n    case \"updateFilterByDisplay\":\n      return {\n        ...state,\n        filterByDisplay: action.filterByDisplay,\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => useContext(StoreContext);","import React from 'react'\nimport './NavBar.css'\nimport { NavLink, Link } from \"react-router-dom\"\nimport { useStore } from \"../store\";\n\nexport const NavBar = () => {\n  const { dispatch } = useStore();\n  return (\n    <header>\n      <Link to=\"/\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Muse</h1>\n          <p className=\"subtitle\">inspiration from the Met</p>\n        </div>\n      </Link>\n      <div className=\"nav-btn-container\">\n        <NavLink exact to=\"/\" activeClassName=\"active-page\">\n          <p>Daily Curation</p>\n        </NavLink>\n        <NavLink\n          to=\"/medium\"\n          activeClassName=\"active-page\"\n          onClick={() => dispatch({\n            type: \"updateCultureOrArtistQuery\",\n            cultureOrArtistQuery: \"\",\n          })}\n        >\n          <p>Medium</p>\n        </NavLink>\n        <NavLink\n          to=\"/culture_or_artist\"\n          activeClassName=\"active-page\"\n          onClick={() =>\n            dispatch({ type: \"updateMediumQuery\", mediumQuery: \"\" })\n          }\n        >\n          <p>Artist</p>\n        </NavLink>\n        <NavLink to=\"/favorites\" activeClassName=\"active-page\">\n          <p>Favorites</p>\n        </NavLink>\n      </div>\n    </header>\n  );\n}","import React from \"react\";\nimport \"./ArtWorkPreview.css\";\nimport { useStore } from \"../store\";\nimport { Link } from \"react-router-dom\";\n\n\nexport const ArtWorkPreview = ({ artwork }) => {\n  const { dispatch } = useStore();\n\n  const findCurrentArtwork = () => {\n    dispatch({ type: \"updateCurrentArtwork\", artDetails: artwork  })\n  }\n\n  return (\n    <Link to={`/expanded-view/${artwork.title}`}>\n      <img\n        data-testid=\"artwork-preview\"\n        onClick={findCurrentArtwork}\n        className=\"preview-image\"\n        src={artwork.primaryImageSmall}\n        alt={artwork.title}\n      />\n    </Link>\n  );\n}","import React from 'react'\nimport './FavoritesPage.css'\nimport { useStore } from \"../store\";\nimport { ArtWorkPreview } from \"../ArtWorkPreview/ArtWorkPreview\";\n\nexport const FavoritesPage = () => {\n  const { state } = useStore();\n\n  return (\n    <section className=\"FavoritesPage\">\n      <h1>Favorites</h1>\n      <div className=\"images-container\" data-testid=\"fave-images-container\">\n        {!state.favorites.length ? (\n          <img\n            className=\"blank-canvas\"\n            alt=\"blank canvas symbolizing an empty favorites page\"\n            src=\"empty-canvas.png\"\n          />\n        ) : (\n          state.favorites.map((fave) => (\n            <ArtWorkPreview artwork={fave} key={fave.objectID} />\n          ))\n        )}\n      </div>\n    </section>\n  );\n}","import React, { useEffect } from \"react\";\nimport { useStore } from \"../store\";\nimport \"./DailyCurationTitle.css\";\n\n\nexport const DailyCurationTitle = () => {\n  const { state, dispatch } = useStore();\n  useEffect(() => {\n    dispatch({ type: \"findRandomTopic\" });\n    return () => {\n      dispatch({ type: \"resetRandomTopic\" });\n    }\n  }, [])\n  \n  return (\n    <div className=\"daily-curation-title\">\n      <p>\n        Explore a collection of art chosen around a daily theme. Today find\n        inspiration through\n      </p>\n      <h1>{state.dailyCurationTopic}s</h1>\n    </div>\n  );\n}","const fetchLink =\n  \"https://collectionapi.metmuseum.org/public/collection/\";\n\nexport const getDailyCollectionIds = async (theme) => {\n         try {\n           let response = await fetch(\n             `${fetchLink}v1/search?medium=Paintings&search?isOnView=true&q=${theme}`);\n           let data = await response.json();\n           return data;\n         } catch (error) {\n           console.log(error);\n         }\n       };\n\nexport const getDailyCollection = async (ids) => {\n         try {\n           let featuredCollection = await Promise.all(\n             ids.map(async (id) => {\n               let collectionsRes = await fetch(\n                 `${fetchLink}v1/objects/${id}`);\n               return collectionsRes.json();\n             })\n           );\n           return featuredCollection;\n         } catch (error) {\n           console.log(error);\n         }\n       };\n\nexport const getOtherArtByArtist = async (artist) => {\n  try {\n    let response = await fetch(`${fetchLink}v1/search?artistOrCulture=true&q=${artist}`);\n    let data = await response.json();\n    return data;\n  }\n  catch (error) {\n      console.log(error);\n    }\n}\n\nexport const fetchByArtistOrCulture = async (query) => {\n  try {\n    let response = await fetch(`${fetchLink}v1/search?hasImages=true&artistOrCulture=true&q=${query}`);\n    let data = await response.json();\n    return data;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchByArtistOrCultureAndOnDisplay = async (query) => {\n  try {\n    let response = await fetch(\n      `${fetchLink}v1/search?isOnView=true&hasImages=true&artistOrCulture=true&q=${query}`\n    );\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchByMedium = async (medium, subCats) => {\n  try {\n    let response = await fetch(\n      `${fetchLink}v1/search?medium=${medium}&q=${medium}`\n    );\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}","import React, { useEffect, useState } from 'react'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n import Loader from \"react-loader-spinner\";\nimport './DailyCuration.css'\nimport {\n  getDailyCollectionIds,\n  getDailyCollection,\n  fetchByArtistOrCulture,\n  fetchByArtistOrCultureAndOnDisplay,\n  fetchByMedium\n} from \"../apiCalls\";\nimport { useStore } from \"../store\";\nimport { ArtWorkPreview } from \"../ArtWorkPreview/ArtWorkPreview\";\n\n\nexport const DailyCuration = ({ page }) => {\n  const { state } = useStore();\n  const [collection, updateCollection] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  let dataObjects;\n  \n  useEffect(() => {\n    fetchData();\n    return () => {\n      updateCollection([]);\n      setIsLoading(true);\n    };\n  }, [state]); \n  \n  const fetchData = async () => {\n    if (page === \"daily-curation\") {\n      let topic = state.dailyCurationTopic;\n      let data = await getDailyCollectionIds(topic);\n      if (data.objectIDs) data.objectIDs = await data.objectIDs.splice(0, 50);\n      dataObjects = await getDailyCollection(data.objectIDs);\n      await updateCollection(dataObjects);\n      await setIsLoading(false)\n    }\n    if (page === \"culture-or-artist\") {      \n      let artworkIds = await fetchByArtistOrCulture(state.cultureOrArtistQuery.search);\n      if (artworkIds.total > 300) {\n        artworkIds.objectIDs = artworkIds.objectIDs.splice(0, 300);\n      }\n      dataObjects = await getDailyCollection(artworkIds.objectIDs);\n      await filterByDisplay()\n      await updateCollection(dataObjects);\n      await setIsLoading(false);      \n    }\n    if (page === \"medium\") {      \n      fetchByMediumQuery()\n    }\n  };\n\n  const fetchByMediumQuery = async () => {    \n    let artworkIds = await fetchByMedium(state.mediumQuery.search);\n      if (artworkIds.total > 300) {\n        artworkIds.objectIDs = artworkIds.objectIDs.splice(0, 300);\n      }\n    dataObjects = await getDailyCollection(artworkIds.objectIDs);\n      await filterByDisplay()\n      await updateCollection(dataObjects);\n      await setIsLoading(false);   \n  }\n\n  const filterByDisplay = async () => {\n    if (state.filterByDisplay) {\n     let artworkIds = await fetchByArtistOrCultureAndOnDisplay(state.cultureOrArtistQuery.search);\n      if (artworkIds.total > 300) {\n        artworkIds.objectIDs = artworkIds.objectIDs.splice(0, 300);\n      }\n      dataObjects = await getDailyCollection(artworkIds.objectIDs);\n      await setIsLoading(false);\n    }\n  }\n  \n  return (\n    <>\n      {collection && state.cultureOrArtistQuery && (\n        <p className=\"results-message\">Results for \"{state.cultureOrArtistQuery.search}\"</p>\n      )}\n      {collection && state.mediumQuery && (\n        <p className=\"results-message\">Results for \"{state.mediumQuery.search}\"</p>\n      )}\n      <div className=\"images-container\" data-testid=\"images-container\">\n        {isLoading && (\n          <Loader type=\"Hearts\" color=\"black\" height={100} width={100} />\n        )}\n        {collection &&\n          collection.map((artwork) => (\n            <ArtWorkPreview artwork={artwork} key={artwork.objectID} />\n          ))}\n        {!collection && state.cultureOrArtistQuery && <p>No results found</p>}\n        {!collection && state.mediumQuery && <p className=\"results-message\">No results found</p>}\n      </div>\n    </>\n  );\n\n  }\n\n","import React from 'react'\nimport './ExpandedView.css'\nimport { useStore } from \"../store\";\n\n\nexport const ExpandedView = ({ artwork }) => {\n  const { state, dispatch } = useStore();\n  const unFaveHeart = \"/not-liked.svg\"\n  const faveHeart = \"/like.svg\" \n\n  const toggleFavorite = () => {\n    if ((state.favorites.some(fave => fave.objectID === artwork.objectID))) {\n      dispatch({ type: \"deleteFromFavorites\", artDetails: artwork });\n    }\n    if (!(state.favorites.some(fave => fave.objectID === artwork.objectID))) {\n      dispatch({ type: \"addToFavorites\", artDetails: artwork });\n    }    \n  }\n\n  return (\n    <div className=\"ExpandedView\">\n      <img\n        className=\"expanded-view-image\"\n        src={artwork.primaryImageSmall}\n        alt={artwork.title}\n      />\n      <div className=\"artwork-details\">\n        <div className=\"title-container-expanded\">\n          <h1>{artwork.title}</h1>\n          <img\n            onClick={toggleFavorite}\n            alt={\n              state.favorites.some((fave) => fave.objectID === artwork.objectID)\n                ? \"Icon for favorited artwork\"\n                : \"Icon for artwork not favorited\"\n            }\n            className=\"heart-icon\"\n            src={\n              state.favorites.some((fave) => fave.objectID === artwork.objectID)\n                ? faveHeart\n                : unFaveHeart\n            }\n          />\n        </div>\n        {artwork.artistDisplayName && (\n          <p>\n            <span>{artwork.artistDisplayName}</span> {artwork.artistDisplayBio}\n          </p>\n        )}\n        <p>\n          <span>Date:</span> {artwork.objectDate}\n        </p>\n        <p>\n          <span>Medium:</span> {artwork.medium}\n        </p>\n        <p>\n          <span>Dimensions:</span> {artwork.dimensions}\n        </p>\n        <p>\n          <a href={artwork.objectURL} target=\"_blank\">\n            Read more at the Met\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport './Filter.css'\nimport { useStore } from \"../store\";\n\n\nexport const Filter = ({ page }) => {\n  const [searchTerms, updateSearch] = useState({search: ''})\n  const { dispatch } = useStore()\n\n  useEffect(() => {\n    return () => {\n      dispatch({ type: \"updateCultureOrArtistQuery\", cultureOrArtistQuery: \"\" })\n      dispatch({ type: \"updateMediumQuery\", mediumQuery: \"\" })\n    }\n  }, [])\n\n  const handleChange = (e) => {\n    if (page === \"medium\") {\n      const name = e.target.name;      \n      const value = e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\n      const search = {[name]: value}\n      updateSearch(search)\n    } else {\n      const name = e.target.name;\n      const value = e.target.value;\n      const search = { [name]: value };\n      updateSearch(search);\n    }\n  }\n\n  const handleClick = () => {\n    if (page === \"culture-or-artist\") {\n      dispatch({ type: \"updateCultureOrArtistQuery\", cultureOrArtistQuery: searchTerms });\n    }\n    if (page === \"medium\") {\n      dispatch({ type: \"updateMediumQuery\", mediumQuery: searchTerms });\n    }\n    updateSearch({search: ''});\n  }\n\n  const filterByDisplay = (e) => {\n    if (e.target.checked) {\n      dispatch({ type: \"updateFilterByDisplay\", filterByDisplay: true });\n    }\n    if (!e.target.checked) {\n      dispatch({ type: \"updateFilterByDisplay\", filterByDisplay: false });\n    }\n  }\n\n  return (\n    <section className=\"Filter\">\n      <h1>\n        Explore by{\" \"}\n        {page === \"culture-or-artist\" ? \"culture or artist\" : \"medium\"}\n      </h1>\n      <form className=\"filter-form\">\n        <div className=\"input-container\">\n          <input\n            onChange={handleChange}\n            className=\"search-input\"\n            type=\"text\"\n            value={searchTerms.search}\n            name=\"search\"\n            placeholder={\n              page === \"culture-or-artist\"\n                ? \"French, Spanish, Vincent Van Gogh, Edgar Degas, etc.\"\n                : \"ceramics, furniture, paintings, sculpture, textiles, etc\"\n            }\n          />\n          <img\n            className=\"search-icon\"\n            alt=\"search icon arrow\"\n            src=\"/go.png\"\n            role=\"button\"\n            aria-pressed=\"false\"\n            tabIndex=\"0\"\n            onClick={handleClick}\n            onKeyDown={handleClick}\n          />\n        </div>\n        <div className=\"on-display-checkbox\">\n          <label htmlFor=\"on-display\">\n            View only artwork on display at the Met\n          </label>\n          <input type=\"checkbox\" id=\"on-display\" name=\"on-display\" onClick={filterByDisplay}/>\n        </div>\n      </form>\n    </section>\n  );\n}","import React from 'react'\nimport './NothingSelectedAlert.css'\n\nexport const NothingSelectedAlert = ({ page }) => {\n  return (\n    <div className={`NothingSelectedAlert `+ page} >\n      <h2>{page === 'culture-or-artist' ? \"discover new art by searching by artist name or culture above\" :\n        `discover new art by searching a ${page} above`}</h2>\n    </div>\n  );\n}","import React, { useEffect, useState} from 'react'\nimport './OtherWorkByArtist.css'\nimport { getOtherArtByArtist, getDailyCollection } from \"../apiCalls\";\nimport { Link } from \"react-router-dom\";\nimport { useStore } from \"../store\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\n\n\nexport const OtherWorkByArtist = ({ artwork }) => {\n  const { dispatch } = useStore()\n  let artistLastName = artwork.artistDisplayName.split(\" \");\n  artistLastName = artistLastName[artistLastName.length - 1];\n  const [artSelection, updateArtSelection] = useState([])\n  \n  const fetchData = async () => {\n    let data = await getOtherArtByArtist(artistLastName);\n    let index = data.objectIDs.indexOf(artwork.objectID);\n    data.objectIDs.splice(index, 1)\n    let collection = await getDailyCollection(data.objectIDs);\n    await updateArtSelection(collection)\n  }\n  useEffect(() => {\n    fetchData()\n  }, [artwork])\n\n  const findCurrentArtwork = (art) => {\n    dispatch({ type: \"updateCurrentArtwork\", artDetails: art });\n  };\n\n\n  return (\n    <section className=\"other-work-section\">\n      {artSelection && <h3>Other work by this artist:</h3>}\n      <ScrollContainer className=\"art-by-artist-container dragscroll\">\n        {artSelection &&\n          artSelection.map((art) => (\n            <Link to={`/expanded-view/${art.title}`} key={art.objectID}>\n              <img\n                onClick={() => findCurrentArtwork(art)}\n                src={art.primaryImageSmall}\n                alt={art.title}\n              />\n            </Link>\n          ))}\n      </ScrollContainer>\n    </section>\n  );\n  \n}","import React from 'react';\nimport './App.css';\nimport { NavBar } from '../NavBar/NavBar'\nimport { FavoritesPage } from '../FavoritesPage/FavoritesPage'\nimport { Switch, Route } from \"react-router-dom\";\nimport { DailyCurationTitle } from '../DailyCurationTitle/DailyCurationTitle'\nimport { DailyCuration } from '../DailyCuration/DailyCuration'\nimport { ExpandedView } from '../ExpandedView/ExpandedView'\nimport { Filter } from '../Filter/Filter'\nimport { NothingSelectedAlert } from '../NothingSelectedAlert/NothingSelectedAlert'\nimport { OtherWorkByArtist } from '../OtherWorkByArtist/OtherWorkByArtist'\nimport { useStore } from \"../store\";\n\n\n\nfunction App() {\n  const { state } = useStore();\n  \n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route path=\"/expanded-view/:artwork\">\n          <ExpandedView artwork={state.currentArtwork} />\n          <OtherWorkByArtist artwork={state.currentArtwork} />\n        </Route>\n        <Route path=\"/favorites\">\n          <FavoritesPage />\n        </Route>\n        <Route path=\"/culture_or_artist\">\n          <Filter page=\"culture-or-artist\" />\n          {!state.cultureOrArtistQuery && (\n            <NothingSelectedAlert page=\"culture-or-artist\" />\n          )}\n          {state.cultureOrArtistQuery && (\n            <DailyCuration page=\"culture-or-artist\" />\n          )}\n        </Route>\n        <Route path=\"/medium\">\n          <Filter page=\"medium\" />\n          {!state.mediumQuery && <NothingSelectedAlert page=\"medium\" />}\n          {state.mediumQuery && <DailyCuration page=\"medium\" />}\n        </Route>\n        <Route exact path=\"/\">\n          <DailyCurationTitle />\n          <DailyCuration page=\"daily-curation\" />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from \"./store\";\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL} >\n      <StoreProvider>\n        <App />\n      </StoreProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}